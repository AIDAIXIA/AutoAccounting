name: Build and Publish Android Pre-Release APKs

on:
  push:
    branches:
      - master

jobs:
  build: # 编译安卓
    runs-on: ubuntu-latest
    steps:
      - name: Check Code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build and Upload APKs
        run: |
          current_time=$(date '+%Y%m%d%H%M%S')
          for flavor in xposed helper; do
            ./gradlew "assemble${flavor^}Release"
            cp app/build/outputs/apk/${flavor}/release/app.apk ${{ github.workspace }}/app-${flavor}-pre-$current_time.apk
          done
          ls -al .
          ls -al ${{ github.workspace }}
        artifacts:
          names: upload
          paths:
          - ${{ github.workspace }}

  sign: # 签名
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
            name: upload
            path:
              - ${{ github.workspace }}
      - uses: ilharp/sign-android-release@v1
        name: Sign app APK # ID used to access action output
        id: sign_app
        with:
          releaseDir: ${{ github.workspace }}
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          buildToolsVersion: 34.0.0
        artifacts:
          names: upload
          paths:
            - ${{ github.workspace }}

  release: # 发布
    needs: [sign]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: upload
          path:
            - ${{ github.workspace }}

      - name: Read versionName from app/build.gradle
        run: |
          versionName=$(grep 'versionName' app/build.gradle | sed -n 's/.*versionName "\([^"]*\)".*/\1/p')
          echo "VERSION_NAME=$versionName" >> $GITHUB_ENV
          echo $GITHUB_ENV
        shell: bash

      - name: Generate Release Notes
        id: release_notes
        run: |
          RELEASE_NOTES=$(git log --pretty=format:"%h %s" ${{ github.event.before }}...${{ github.sha }} | sed -E 's/^(.{7})(.*)$/- \1 \2/g')
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
        env:
          GITHUB_SHA: ${{ github.sha }}

      - name: Generate Tag Name
        id: tag_name
        run: echo "TAG_VERSION_NAME=v${{ env.VERSION_NAME }}-night-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create And Push Tag
        run: |
          git tag ${{ env.TAG_VERSION_NAME }}
          git push origin ${{ env.TAG_VERSION_NAME }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ github.workspace }}/app-*.apk
          tag_name: ${{ env.TAG_VERSION_NAME }}
          body: ${{ env.RELEASE_NOTES }}
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}